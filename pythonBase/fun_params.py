#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# 函数的参数
print('函数的参数')
print('python的函数定义非常简单，但灵活度却非常大，'
      '除了正常定义的必选参数外，'
      '还可以使用默认参数、可变参数和关键字参数，'
      '使得函数定义出来的接口，不但能处理复杂的参数'
      '还可以简化调用者的代码')

# 位置参数
print('位置参数')
print('即哪个位置的参数调用的时候就放在哪个位置')

# 默认参数
print('默认参数')
print('即就是在函数的参数位置给参数默认值'
      '在调用时，带有默认值的参数位置可以不写')
print('设置默认参数时，有几点要注意：'
      '1、必选参数在前，默认参数在后，否则pyhon的解释器会报错'
      '2、如何设置默认参数：当函数有多个参数时，把变化大的参数放前面，变化小的参数放后面，变化小的参数就可以作为默认参数'
      '-------------------------------'
      '使用默认参数有什么好处，最大的好处是能降低调用函数的难度')

def add_end(L=[]):
    L.append('END')
    return L
print(add_end([1,2,3]))
print(add_end([1]))
print(add_end(['x']))
print(add_end())
print(add_end())
print(add_end())
print('上面的三次调用同一函数，却一次比一次多打印一个，'
      '是因为参数中的L是可变的，调用一次会‘记住’上次的内容'
      '所以要使用None这个不变对象来实现，调用多少次都不会有改变')

print('为啥要设计str，None这样的不变对象，因为不变对象一旦创建，对象内部的数据就不能修改'
      '这样就减少了由于修改数据导致的错误。'
      '此外，由于对象不变，多任务环境下同时读取对象不需要加锁，'
      '同时读一点问题都没有，我们在编写程序时，如果可以设计一个不变对象'
      '那就尽量设计成不变对象')

# 可变参数
print('在python函数中，可以定义可变参数，就是传入的参数个数是可变的')
print('用发：在参数前面加一个 * 号即为可变参数，'
      '调用函数时，可以传入任意个参数，包括0个；'
      '也可以给list和tuple前面加 * 号，变为可变参数来使用')


# 关键字参数
print('可变参数允许传入0个或任意个参数，这些可变参数在函数条用时自动组装成一个tuple；'
      '而关键字参数也允许传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装成一个dict；')

# def person(name, age, **kw):
#       print('name', name, 'age', age, 'other', kw)
print('person(\'bob\', 20, city=\'beijing\'),即city是任意参数')
print('person函数除了必选参数name和age外还接受关键字参数kw。'
      '在调用函数时，可以只传入必选参数')

print('在做用户注册的功能，除了用户名和年龄是必须，其他都是可选项，'
      '利用关键字参数来定义这个函数就可以满足注册的需求')
print('可以和可变参数类似，先组装出一个dict，然后把该dict转换成关键字参数传进去')

# extra = {'city': 'Beijing', 'Job': 'Engineer'}
# person('Jack', 20, city=extra['city'], Job=extra['Job'])
# person('Jack', 20, **extra)         # 与上一行结果一样
print('**extra表示把extra这个dict的所有key-value用关键字参数传入函数的**kw参数中'
      'kw将获得一个dict，注意kw获得的dict是extra的一份拷贝，'
      '对kw的改动不会影响到函数外的extra')